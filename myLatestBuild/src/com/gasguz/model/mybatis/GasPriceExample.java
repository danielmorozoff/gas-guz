package com.gasguz.model.mybatis;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class GasPriceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public GasPriceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("gp.ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("gp.ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("gp.ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("gp.ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("gp.ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("gp.ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("gp.ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("gp.ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("gp.ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("gp.ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("gp.ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("gp.ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdIsNull() {
            addCriterion("gp.VENDOR_LOCATION_ID is null");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdIsNotNull() {
            addCriterion("gp.VENDOR_LOCATION_ID is not null");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdEqualTo(Long value) {
            addCriterion("gp.VENDOR_LOCATION_ID =", value, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdNotEqualTo(Long value) {
            addCriterion("gp.VENDOR_LOCATION_ID <>", value, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdGreaterThan(Long value) {
            addCriterion("gp.VENDOR_LOCATION_ID >", value, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdGreaterThanOrEqualTo(Long value) {
            addCriterion("gp.VENDOR_LOCATION_ID >=", value, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdLessThan(Long value) {
            addCriterion("gp.VENDOR_LOCATION_ID <", value, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdLessThanOrEqualTo(Long value) {
            addCriterion("gp.VENDOR_LOCATION_ID <=", value, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdIn(List<Long> values) {
            addCriterion("gp.VENDOR_LOCATION_ID in", values, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdNotIn(List<Long> values) {
            addCriterion("gp.VENDOR_LOCATION_ID not in", values, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdBetween(Long value1, Long value2) {
            addCriterion("gp.VENDOR_LOCATION_ID between", value1, value2, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andVendorLocationIdNotBetween(Long value1, Long value2) {
            addCriterion("gp.VENDOR_LOCATION_ID not between", value1, value2, "vendorLocationId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdIsNull() {
            addCriterion("gp.GAS_GRADE_ID is null");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdIsNotNull() {
            addCriterion("gp.GAS_GRADE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdEqualTo(Long value) {
            addCriterion("gp.GAS_GRADE_ID =", value, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdNotEqualTo(Long value) {
            addCriterion("gp.GAS_GRADE_ID <>", value, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdGreaterThan(Long value) {
            addCriterion("gp.GAS_GRADE_ID >", value, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("gp.GAS_GRADE_ID >=", value, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdLessThan(Long value) {
            addCriterion("gp.GAS_GRADE_ID <", value, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdLessThanOrEqualTo(Long value) {
            addCriterion("gp.GAS_GRADE_ID <=", value, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdIn(List<Long> values) {
            addCriterion("gp.GAS_GRADE_ID in", values, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdNotIn(List<Long> values) {
            addCriterion("gp.GAS_GRADE_ID not in", values, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdBetween(Long value1, Long value2) {
            addCriterion("gp.GAS_GRADE_ID between", value1, value2, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andGasGradeIdNotBetween(Long value1, Long value2) {
            addCriterion("gp.GAS_GRADE_ID not between", value1, value2, "gasGradeId");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("gp.PRICE is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("gp.PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("gp.PRICE =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("gp.PRICE <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("gp.PRICE >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("gp.PRICE >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("gp.PRICE <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("gp.PRICE <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("gp.PRICE in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("gp.PRICE not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gp.PRICE between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gp.PRICE not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andLastIdIsNull() {
            addCriterion("gp.LAST_ID is null");
            return (Criteria) this;
        }

        public Criteria andLastIdIsNotNull() {
            addCriterion("gp.LAST_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLastIdEqualTo(Long value) {
            addCriterion("gp.LAST_ID =", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdNotEqualTo(Long value) {
            addCriterion("gp.LAST_ID <>", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdGreaterThan(Long value) {
            addCriterion("gp.LAST_ID >", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdGreaterThanOrEqualTo(Long value) {
            addCriterion("gp.LAST_ID >=", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdLessThan(Long value) {
            addCriterion("gp.LAST_ID <", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdLessThanOrEqualTo(Long value) {
            addCriterion("gp.LAST_ID <=", value, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdIn(List<Long> values) {
            addCriterion("gp.LAST_ID in", values, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdNotIn(List<Long> values) {
            addCriterion("gp.LAST_ID not in", values, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdBetween(Long value1, Long value2) {
            addCriterion("gp.LAST_ID between", value1, value2, "lastId");
            return (Criteria) this;
        }

        public Criteria andLastIdNotBetween(Long value1, Long value2) {
            addCriterion("gp.LAST_ID not between", value1, value2, "lastId");
            return (Criteria) this;
        }

        public Criteria andDateCreatedIsNull() {
            addCriterion("gp.DATE_CREATED is null");
            return (Criteria) this;
        }

        public Criteria andDateCreatedIsNotNull() {
            addCriterion("gp.DATE_CREATED is not null");
            return (Criteria) this;
        }

        public Criteria andDateCreatedEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_CREATED =", value, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedNotEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_CREATED <>", value, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedGreaterThan(Date value) {
            addCriterionForJDBCDate("gp.DATE_CREATED >", value, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_CREATED >=", value, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedLessThan(Date value) {
            addCriterionForJDBCDate("gp.DATE_CREATED <", value, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_CREATED <=", value, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedIn(List<Date> values) {
            addCriterionForJDBCDate("gp.DATE_CREATED in", values, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedNotIn(List<Date> values) {
            addCriterionForJDBCDate("gp.DATE_CREATED not in", values, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gp.DATE_CREATED between", value1, value2, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateCreatedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gp.DATE_CREATED not between", value1, value2, "dateCreated");
            return (Criteria) this;
        }

        public Criteria andDateModifiedIsNull() {
            addCriterion("gp.DATE_MODIFIED is null");
            return (Criteria) this;
        }

        public Criteria andDateModifiedIsNotNull() {
            addCriterion("gp.DATE_MODIFIED is not null");
            return (Criteria) this;
        }

        public Criteria andDateModifiedEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED =", value, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedNotEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED <>", value, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedGreaterThan(Date value) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED >", value, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED >=", value, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedLessThan(Date value) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED <", value, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED <=", value, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedIn(List<Date> values) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED in", values, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedNotIn(List<Date> values) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED not in", values, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED between", value1, value2, "dateModified");
            return (Criteria) this;
        }

        public Criteria andDateModifiedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gp.DATE_MODIFIED not between", value1, value2, "dateModified");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table GG_GAS_PRICE
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}